from Crypto.Util.number import getStrongPrime, bytes_to_long, long_to_bytes
# f = open("flag.txt").read()
# m = bytes_to_long(f.encode())
# p = getStrongPrime(512)
# q = getStrongPrime(512)
# n = p*q
# e = 65537
# c = pow(m,e,n)
# print("n =",n)
# print("e =",e)
# print("c =",c)

# d = pow(e, -1, (p-1)*(q-1))

# c = int(input("Text to decrypt: "))

# if c == m or b"actf{" in long_to_bytes(pow(c, d, n)):
#     print("No flag for you!")
#     exit(1)

r = 7038329
n = 100138139745889177928244299406442671131311332346933567905027336149890386149133486309264824939031729484470377094643362901071478938258122383854147356879431097680913144463377372958779438834832553705585752401818754113773593337662100834527319829323910001351019455214778032048914325601230283694076419454251110003063
e = 65537
c = 51373553803540460197056352132931958654684435374529297400034689616498253430033030714101314168666552391764672020255432224374988526042992796243923824199415741601615872306192968776536308784342434299531225186320941539052228015134789843363647874468085100398126591937839017782758035158320517426365205590583514017186


m = 412112342862564180970532748508049035887961955421979167315720577182542925892777349867909238616128066804419544476103138837
print(long_to_bytes(m//r))
print(pow(r,e,n)*c)
